import random
import time

# Vari√°veis globais
wallet = 0  # Come√ßa com 0, o jogador precisa depositar
taxa_de_vitoria = 0.3  # 30% de chance de vit√≥ria
custo_temporario = None  # Para ofertas especiais

def dep_cre():
    """Fun√ß√£o para depositar cr√©ditos na carteira (valor m√≠nimo: 5‚Ç¢)"""
    global wallet
    while wallet < 5:  # Garante que o dep√≥sito seja suficiente para pelo menos uma aposta
        try:
            deposito = int(input("Quanto deseja depositar? (m√≠nimo 5‚Ç¢): "))
            if deposito >= 5:
                wallet += deposito
                print(f"‚úÖ Dep√≥sito de {deposito}‚Ç¢ realizado! Saldo atual: {wallet}‚Ç¢")
                break
            else:
                print("‚ùå O valor m√≠nimo de dep√≥sito √© 5‚Ç¢.")
        except ValueError:
            print("‚ùå Por favor, insira um n√∫mero v√°lido.")

def escolher_aposta():
    """Permite ao jogador escolher o valor da aposta por rodada (m√≠nimo 5‚Ç¢)"""
    while True:
        try:
            aposta = int(input("Quanto deseja apostar por rodada? (m√≠nimo 5‚Ç¢): "))
            if aposta < 5:
                print("‚ùå A aposta m√≠nima por rodada √© 5‚Ç¢.")
            elif aposta > wallet:
                print(f"‚ùå Saldo insuficiente! Voc√™ tem {wallet}‚Ç¢.")
            else:
                return aposta
        except ValueError:
            print("‚ùå Por favor, insira um n√∫mero v√°lido.")

def gerar_matriz_controlada(num_rodadas):
    """
    Gera as linhas com controle de sorte:
    - 30% de chance de ter pelo menos 1 linha vencedora
    """
    tem_vitoria = random.random() < taxa_de_vitoria
    matriz = []

    for i in range(num_rodadas):
        if tem_vitoria and i == 0:
            num = random.randint(1, 9)
            linha = [num, num, num]
            tem_vitoria = False
        else:
            linha = [random.randint(1, 9) for _ in range(3)]
            # Evita vit√≥ria acidental se n√£o for sorteada
            while linha[0] == linha[1] == linha[2]:
                linha = [random.randint(1, 9) for _ in range(3)]
        matriz.append(linha)
    
    return matriz

def verificar_premio(matriz, num_rodadas, vlr_aposta):
    """Verifica linhas vencedoras e calcula pr√™mio com multiplicador"""
    premios_por_rodada = {1: 1.2, 2: 1.3, 3: 1.4}
    multiplicador = premios_por_rodada[num_rodadas]

    vitorias = 0
    for linha in matriz:
        if linha[0] == linha[1] == linha[2]:
            vitorias += 1

    if vitorias > 0:
        premio_base = vitorias * vlr_aposta
        premio_total = int(premio_base * multiplicador)
        print(f"üéâ {vitorias} linha(s) vencedora(s)! Pr√™mio multiplicado por {multiplicador}x!")
        return premio_total
    else:
        return 0

def interface_animada(matriz):
    """Exibe a anima√ß√£o de raspagem para cada linha."""
    print("\n--- Raspando as rodadas... üé´ Scratching ---")
    time.sleep(1)

    for i, linha in enumerate(matriz):
        print(f"Rodada {i+1}: ", end="", flush=True)
        time.sleep(0.5)
        
        for j, num in enumerate(linha):
            if j > 0:
                print(" | ", end="", flush=True)
            print("?", end="", flush=True)
            time.sleep(0.3)
            print("\b\b" + str(num), end="", flush=True)
            time.sleep(0.4)
        print()
    print("-------------------------------")

def inicio():
    """Fun√ß√£o principal para iniciar o jogo."""
    global wallet, custo_temporario

    print("üí∞ === Boas-vindas ao 'Macaco Milion√°rio'! === üí∞")
    print(f"Saldo atual: {wallet}‚Ç¢")

    # Se o jogador est√° usando uma oferta especial de aposta baixa
    aposta_atual = custo_temporario if custo_temporario else None

    # Oferecer dep√≥sito se necess√°rio
    if wallet < 5:
        print("üí≥ Voc√™ precisa de cr√©ditos para jogar.")
        dep_cre()

    # Permitir que o jogador escolha o valor da aposta
    if aposta_atual:
        usar_oferta = input(f"Oferta ativa: apostar por {aposta_atual}‚Ç¢ nesta rodada? (s/n): ").strip().lower()
        if usar_oferta == 's':
            vlr_aposta = aposta_atual
            print(f"‚úÖ Aposta definida para {vlr_aposta}‚Ç¢ (oferta especial).")
        else:
            vlr_aposta = escolher_aposta()
    else:
        vlr_aposta = escolher_aposta()

    # N√∫mero de rodadas
    while True:
        try:
            num_rodadas = int(input(f"Quantas rodadas deseja apostar? (1 a 3) Custo total: {vlr_aposta * num_rodadas}‚Ç¢: "))
            if 1 <= num_rodadas <= 3:
                custo_total = num_rodadas * vlr_aposta
                if custo_total > wallet:
                    print(f"‚ùå Saldo insuficiente! Voc√™ precisa de {custo_total}‚Ç¢, mas tem {wallet}‚Ç¢.")
                else:
                    break
            else:
                print("‚ùå Escolha entre 1 e 3 rodadas.")
        except ValueError:
            print("‚ùå Por favor, insira um n√∫mero v√°lido.")

    # Descontar aposta
    wallet -= custo_total
    print(f"üéüÔ∏è Apostas realizadas! {num_rodadas} rodada(s). Custo: {custo_total}‚Ç¢. Saldo restante: {wallet}‚Ç¢")

    # Gerar e revelar resultados
    matriz = gerar_matriz_controlada(num_rodadas)
    interface_animada(matriz)

    # Verificar pr√™mio
    premio = verificar_premio(matriz, num_rodadas, vlr_aposta)
    if premio > 0:
        wallet += premio
        print(f"üí∞ Voc√™ ganhou {premio}‚Ç¢! Novo saldo: {wallet}‚Ç¢")
    else:
        print("‚ùå Nenhuma linha vencedora. Tente novamente!")

    # Resetar oferta ap√≥s uso
    if custo_temporario and usar_oferta == 's':
        print(f"‚û°Ô∏è Oferta usada. Aposta voltou ao valor normal a partir da pr√≥xima.")
        custo_temporario = None

# === Programa Principal ===
if __name__ == "__main__":
    # Primeiro dep√≥sito inicial
    if wallet == 0:
        print("üí≥ Para come√ßar, fa√ßa seu primeiro dep√≥sito!")
        dep_cre()

    while True:
        inicio()
        continuar = input("Deseja jogar novamente? (s/n): ").strip().lower()
        if continuar != 's':
            print("‚ùå Nenhuma linha vencedora. Tente novamente!")
            oferta = input("Voc√™ est√° desistindo? Que tal tentar por 2‚Ç¢ na pr√≥xima rodada? (s/n): ").strip().lower()
            if oferta == 's' and wallet >= 2:
                custo_temporario = 2
                print("‚úÖ √ìtimo! Na pr√≥xima rodada, voc√™ poder√° apostar por apenas 2‚Ç¢. Boa sorte! üçÄ")
            elif oferta == 's' and wallet < 2:
                print("‚ùå Saldo insuficiente para oferta. Dep√≥sito necess√°rio.")
                dep_cre()
                if wallet >= 2:
                    custo_temporario = 2
                    print("‚úÖ Oferta ativada! Pr√≥xima aposta por 2‚Ç¢.")
                else:
                    print("‚û°Ô∏è Continue jogando normalmente.")
            else:
                print("Obrigado por jogar! At√© a pr√≥xima! üêµ")
            break